# ??????? ?? ??? ??? ? ??? ??
spring.jpa.show-sql=true

# Hibernate: drop table if exists posts CASCADE
# Hibernate: create table posts (id bigint generated by default as identity, author varchar(255), content TEXT not null, title varchar(500) not null, primary key (id))
# ?? ??: (??) H2 ?? ?? ?? -> (?? ?) MySQL ?? ??
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb
#spring.datasource.hikari.jdbc-url=jdbc:h2:mem:testdb;MODE=MYSQL


spring.datasource.generate-unique-name=false

# for direct access using web console
spring.h2.console.enabled=true

spring.h2.console.path=/h2-console
spring.h2.datasource.driver-class-name=
spring.datasource.url= jdbc:h2:mem:testdb
spring.datasource.username= sa
spring.datasource.password=


# oauth properties\uB97C \uD3EC\uD568\uD558\uB3C4\uB85D \uC124\uC815
spring.profiles.include=oauth

# \uC138\uC158 \uC800\uC7A5\uC18C\uB97C jdbc\uB85C \uC0AC\uC6A9
spring.session.store-type=jdbc

# \uC138\uC158 \uC800\uC7A5\uC18C\uB294 \uC77C\uBC18\uC801\uC73C\uB85C \uB2E4\uC74C 3\uAC00\uC9C0 \uC911 \uC120\uD0DD
# (1) \uD1B0\uCEA3 \uC138\uC158
#   - \uBCC4\uB2E4\uB978 \uC124\uC815\uC744 \uD558\uC9C0 \uC54A\uC744 \uB54C \uAE30\uBCF8\uC801\uC73C\uB85C \uC124\uC815\uB428
#   - \uD1B0\uCEA3(Web Application Server, WAS)\uC5D0 \uC800\uC7A5\uB418\uAE30 \uB54C\uBB38\uC5D0 2\uB300 \uC774\uC0C1\uC758 WAS\uAC00 \uAD6C\uB3D9\uB418\uB294 \uD658\uACBD\uC5D0\uC11C\uB294 \uD1B0\uCEA3\uB4E4\uAC04 \uC138\uC158 \uACF5\uC720\uB97C \uC704\uD55C \uCD94\uAC00 \uC124\uC815 \uD544\uC694
# (2) \uB370\uC774\uD130\uBCA0\uC774\uC2A4 --- \uC6B0\uB9B0 \uC774\uAC70 \uC0AC\uC6A9\uD560 \uAC83!
#   - \uACF5\uC6A9 \uC138\uC158\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uAC00\uC7A5 \uC26C\uC6B4 \uBC29\uBC95
#   - \uC124\uC815\uC740 \uAC04\uB2E8, but \uB85C\uADF8\uC778 \uC694\uCCAD\uB9C8\uB2E4 DB IO\uAC00 \uBC1C\uC0DD\uD558\uC5EC \uC131\uB2A5 \uC774\uC288 \uBC1C\uC0DD \uAC00\uB2A5\uC131 \uB192\uC74C
#   - \uB85C\uADF8\uC778 \uC694\uCCAD\uC774 \uB9CE\uC774 \uC5C6\uB294 \uBC31\uC624\uD53C\uC2A4, \uC0AC\uB0B4 \uC2DC\uC2A4\uD15C \uC6A9\uB3C4\uB85C \uC0AC\uC6A9
# (3) Redis, Memcached\uC640 \uAC19\uC740 \uBA54\uBAA8\uB9AC DB
#   - B2C \uC11C\uBE44\uC2A4\uC5D0\uC11C \uAC00\uC7A5 \uB9CE\uC774 \uC0AC\uC6A9
#   - \uC2E4\uC81C \uC11C\uBE44\uC2A4\uB85C \uC0AC\uC6A9\uD558\uAE30 \uC704\uD574\uC11C\uB294 Embedded Redis \uAC19\uC740 \uBC29\uC2DD\uC774 \uC544\uB2CC \uC678\uBD80 \uBA54\uBAA8\uB9AC \uC11C\uBC84 \uD544\uC694